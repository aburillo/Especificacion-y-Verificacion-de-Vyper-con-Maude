pendingReturns: public(HashMap[address, uint256])
@external
def __init__(_beneficiary: address, _auction_start: uint256, _bidding_time: uint256):
    self.beneficiary = _beneficiary
    self.auctionStart = _auction_start 
    self.auctionEnd = self.auctionStart + _bidding_time
    assert block.timestamp < self.auctionEnd 
end
@external
def withdraw():
    pending_amount: uint256 = self.pendingReturns[msg.sender]
    self.pendingReturns[msg.sender] = 0
    send(msg.sender, pending_amount)
end
@payable
@external
def adoptar(_direccion: String[20],_telefono: String[9],_nombre: String[20],_apellidos:String [40]):
    assert not self.adoptado, "No adoptado"
    assert msg.value == self.tasas, "Tasas exactas"
    self.dueno = msg.sender
    self.adoptado = True
    self.tope = block.timestamp + self.tiempo_revision
    send(self.protectora,self.tasas)
    self.vacunado = True
end