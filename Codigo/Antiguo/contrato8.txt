struct Datos:
    nombre:String[20]
    apellidos:String[40]
    direccion:String[20]
    telefono:String[9]
end 
tiempo_revision: public(uint256)
protectora : public(address)
microchip : public(String[15])
veterinario : public(address)
tasas: public(uint256)

dueno: public(address)
adoptado: public(bool)
tope: uint256
datos: public(Datos)
vacunado:bool

@external
def __init__(_revision: uint256, _numerochip: String[15], _veterinario: address, _tasas : uint256):
    self.protectora = msg.sender
    self.tiempo_revision = _revision
    self.microchip = _numerochip
    self.veterinario = _veterinario
    self.tasas = _tasas
end
@payable
@external
def adoptar(_direccion: String[20],_telefono: String[9],_nombre: String[20],_apellidos:String [40]):
    assert not self.adoptado
    assert msg.value == self.tasas
    self.dueno = msg.sender
    self.adoptado = True
    self.tope = block.timestamp + self.tiempo_revision
    send(self.protectora,self.tasas)
    self.vacunado = True
end
@external
def vacunar(maltrato: bool, operaciones: bool,_chip:String[15]):
    assert self.adoptado
    assert msg.sender == self.veterinario
    assert block.timestamp < self.tope
    assert self.microchip == _chip
    self.vacunado = True
    if maltrato or operaciones:
        self.adoptado = False
        self.dueno = self.protectora
        self.datos = empty(Datos)
    end ;
end
@external
def revision(apto: bool,_chip:String[15]):
    assert self.adoptado
    assert msg.sender == self.protectora
    assert block.timestamp > self.tope
    assert self.microchip == _chip
    if apto or not self.vacunado:
        self.adoptado = False
        self.dueno = self.protectora
        self.datos = empty(Datos)
    else:
        self.vacunado = False
        self.tope = block.timestamp + self.tiempo_revision
    end ;
end
@external
def ceder(_chip:String[15]):
    assert self.adoptado
    assert self.microchip == _chip
    assert msg.sender == self.dueno
    self.adoptado = False
    self.dueno = self.protectora
    self.datos = empty(Datos)
end
@external
def dar_baja(_chip:String[15]):
    assert msg.sender == self.veterinario
    assert self.microchip == _chip
    selfdestruct(self.protectora)
end
@external
def cambio_domicilio(_domicilio: String[20],_chip:String[15]):
    assert self.adoptado
    assert msg.sender == self.dueno
    assert self.microchip == _chip
    self.datos.direccion = _domicilio
end
@external
def cambio_telefono(_telefono: String[9],_chip:String[15]):
    assert self.adoptado
    assert msg.sender == self.dueno
    assert self.microchip == _chip
    self.datos.telefono = _telefono
end
@external
def cambio_veterinario(_veterinario: address,_chip:String[15]):
    assert msg.sender == self.dueno or msg.sender == self.protectora
    assert self.microchip == _chip
    self.veterinario = _veterinario
end
@view
@external
def consultar_datos()-> Datos:
    assert msg.sender == self.protectora
    return self.datos
end
@view
@external
def consultar_adoptado()->bool:
    return self.adoptado
end